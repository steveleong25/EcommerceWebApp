@model List<Product>

@Html.AntiForgeryToken()
@foreach(var product in Model)
{
    <div class="mx-5 mt-3 border-bottom product-card">
        <div class="d-flex position-relative">
            <div class="me-auto">
                <span class="fw-bold mr-3">@product.StockKeepingUnit</span>
                <span class="fw-bold" style="color: #31DE96">@product.StockQuantity stock</span>
                <p class="card-title">@product.ProductName</p>
                @if (product.Variations.Any())
                {
                    <p id="price-display">RM @product.Variations[0].RegularPrice</p>                    
                }
            </div>
            <div>
                <img src="@(product.ImageUrl.Any() ? product.ImageUrl[0].SourceMedium : "")" class="flex-shrink-0 ms-auto rounded" alt="Product Image" height="200" width="200">
            </div>

        </div>
        <div class="d-flex justify-content-end gap-2 my-3 product-details">
            <select class="form-select w-auto uom-select">
                @foreach (var variation in product.Variations)
                {
                    <option value="@variation.VariationId" data-price="@variation.RegularPrice">
                        @variation.UnitOfMeasurement
                    </option>
                }
            </select>

            <div class="input-group w-auto" style="width: 120px;">
                <button class="btn btn-outline-secondary btn-sm" type="button" onclick="decreaseQty(this)">-</button>
                <input type="text" class="form-control text-center" value="1" />
                <button class="btn btn-outline-secondary btn-sm" type="button" onclick="increaseQty(this)">+</button>
            </div>

            <button class="btn btn-primary rounded-circle d-flex align-items-center justify-content-center align-middle" onclick="addToCart(this)" style="width:40px;height:40px;">
                <i class="fa-solid fa-plus"></i>
            </button>
        </div>
    </div>
}

<script>
    function decreaseQty(btn) {
        let input = btn.parentNode.querySelector("input");
        let value = parseInt(input.value) || 1;
        if (value > 1) input.value = value - 1;
    }

    function increaseQty(btn) {
        let input = btn.parentNode.querySelector("input");
        let value = parseInt(input.value) || 1;
        input.value = value + 1;
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".uom-select").forEach(function (select) {
            select.addEventListener("change", function () {
                let selectedOption = this.options[this.selectedIndex];
                let price = selectedOption.getAttribute("data-price");

                // find price display in same product block
                let priceDisplay = this.closest(".mx-5").querySelector("#price-display");
                if (priceDisplay) {
                    priceDisplay.textContent = "RM " + price;
                }
            });
        });
    });

    function addToCart(button) {
        let container = button.closest(".product-details");
        let variationId = container.querySelector("select").value;
        let quantity = container.querySelector("input").value;

        fetch('/Cart/Add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({ variationId, quantity })
        })
        .then(res => res.json()
        .then( 
            updateupdateCartBadge()
        ));
    }

</script>